<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Mon site{% endblock %}</title>
        <link rel="stylesheet" href="{{ asset('css/app.css') }}">
        {% block stylesheets %}{% endblock %}
    </head>
    <body class="{{ app.user is not null and app.user.color == 0 ? 'theme-dark' : 'theme-light' }}">
        {% block body %}{% endblock %}
        {% block javascripts %}
        <script>
            // On définit l'objet contenant les URLs pour chaque icône selon le thème
            var sidebarIcons = {
                home: {
                    dark: "{{ asset('icones/white/home.png') }}",
                    light: "{{ asset('icones/black/home.png') }}"
                },
                objets: {
                    dark: "{{ asset('icones/white/026-search.png') }}",
                    light: "{{ asset('icones/black/026-search.png') }}"
                },
                profil: {
                    dark: "{{ asset('icones/white/profil.png') }}",
                    light: "{{ asset('icones/black/profil.png') }}"
                },
                exit: {
                    dark: "{{ asset('icones/white/exit.png') }}",
                    light: "{{ asset('icones/black/exit.png') }}"
                },
                admin_users: {
                    dark: "{{ asset('icones/white/008-message.png') }}",
                    light: "{{ asset('icones/black/008-message.png') }}"
                },
                admin_signalements: {
                    dark: "{{ asset('icones/white/043-warning.png') }}",
                    light: "{{ asset('icones/black/043-warning.png') }}"
                },
                admin_profil: {
                    dark: "{{ asset('icones/white/profil.png') }}",
                    light: "{{ asset('icones/black/profil.png') }}"
                }
            };

    function toggleTheme() {
        console.log("toggleTheme appelé")
        // Déterminer le thème actuel
        const isCurrentlyDark = document.body.classList.contains('theme-dark');
        const newTheme = isCurrentlyDark ? 'theme-light' : 'theme-dark';

        // Appliquer la nouvelle classe au body
        document.body.classList.remove('theme-light', 'theme-dark');
        document.body.classList.add(newTheme);

        // Mettre à jour l’icône du bouton
        const themeIcon = document.getElementById('theme-icon');
        if (themeIcon) {
            themeIcon.src = newTheme === 'theme-dark'
                ? "/icones/white/moon.png"
                : "/icones/black/sun.png";
        }

        // Mise à jour des icônes de la sidebar
        const themeKey = newTheme === 'theme-dark' ? 'dark' : 'light';
        document.getElementById('icon-home').src = sidebarIcons.home[themeKey];
        document.getElementById('icon-objets').src = sidebarIcons.objets[themeKey];
        document.getElementById('icon-profil').src = sidebarIcons.profil[themeKey];
        document.getElementById('icon-exit').src = sidebarIcons.exit[themeKey];
        {% if is_granted('ROLE_ADMIN') %}
        document.getElementById('icon-admin-users').src = sidebarIcons.admin_users[themeKey];
        document.getElementById('icon-admin-signalements').src = sidebarIcons.admin_signalements[themeKey];
        document.getElementById('icon-admin-profil').src = sidebarIcons.admin_profil[themeKey];
        {% endif %}

        // Envoi AJAX sans recharger la page
        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/update-theme', true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
                console.log('Thème enregistré sur le serveur.');
                // Pas besoin de recharger, tout a été mis à jour dynamiquement
            }
        };
        xhr.send(JSON.stringify({ color: newTheme === 'theme-dark' ? 1 : 0 }));
    }
</script>

        {% endblock %}
    </body>
</html>
