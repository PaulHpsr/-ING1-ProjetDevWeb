<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Mon site{% endblock %}</title>
        <link rel="stylesheet" href="{{ asset('css/app.css') }}">
        {% block stylesheets %}{% endblock %}
    </head>
    <body class="{{ app.user is not null and app.user.color == 0 ? 'theme-dark' : 'theme-light' }}">
        {% block body %}{% endblock %}
        {% block javascripts %}
        <script>

 function toggleTheme() {
    console.log("toggleTheme appelé");

    // Déterminer le thème actuel
    const isCurrentlyDark = document.body.classList.contains('theme-dark');
    const newTheme = isCurrentlyDark ? 'theme-light' : 'theme-dark';

    // Envoi AJAX pour mettre à jour le thème dans la base de données
    const xhr = new XMLHttpRequest();
    xhr.open('POST', '/update-theme', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
            console.log('Thème enregistré sur le serveur.');

            // Vérifier si l'élément theme-icon existe avant de modifier son attribut
            const themeIcon = document.getElementById('theme-icon');
            if (themeIcon) {
                themeIcon.src = newTheme === 'theme-dark'
                    ? "/icones/white/moon.png"
                    : "/icones/black/sun.png";
            } 
            
            // Appliquer la nouvelle classe au body après avoir enregistré dans la base de données
            document.body.classList.remove('theme-light', 'theme-dark');
            document.body.classList.add(newTheme);


            
        }
    };
    xhr.send(JSON.stringify({ color: newTheme === 'theme-dark' ? 0 : 1 }));

}




</script>

        {% endblock %}
    </body>
</html>